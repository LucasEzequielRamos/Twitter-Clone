// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id Int @id  @default(autoincrement())
  user_nick String? @unique @db.VarChar(20)
  email_address String @unique(map: "email") @db.VarChar(255)
  full_name String? @db.VarChar(255)
  phonenumber String? @db.Char(15)
  created_at DateTime  @default(now()) @db.Timestamp(0)
  password String @db.VarChar(255)
  avatar_url String? @db.VarChar(255)
  description String? @db.VarChar(255)
  birthday String? @db.VarChar(255)
  followers Followers[] @relation("followers_user")
  following Followers[] @relation("following_user")
  tweets Tweets[]
  likes Tweets_likes[]
}

model Followers {
  follower_id Int 
  following_id Int
  @@id([follower_id, following_id])
  follower Users @relation("followers_user",fields: [follower_id], references: [id])
  following Users @relation("following_user", fields: [following_id], references: [id])
}

model Tweets{
tweet_id Int @id @default(autoincrement())
user_id Int
content String @db.VarChar(280)
num_likes Int @default(0)
num_retweets Int @default(0)
num_comments Int @default(0)
created_at DateTime @default(now()) @db.Timestamp(0)
user Users @relation(fields: [user_id], references: [id])
likes Tweets_likes[]
}

model Tweets_likes{
tweet_id Int
user_id Int
@@id([tweet_id, user_id])
user Users @relation(fields: [user_id], references: [id])
tweet Tweets @relation(fields: [tweet_id], references: [tweet_id])

}

